{"ast":null,"code":"var _jsxFileName = \"/root/react/mlweb/src/modules/sign.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import Head from 'next/head';\n// import AppLayout from '../components/AppLayout';\n\nimport { Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = props => {\n  _s();\n\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    /**검증 로직 만들기\n     * 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\n     * 2. 약관 동의를 확인한다.\n     */\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    console.log({\n      id,\n      password,\n      passwordCheck\n    });\n  }; // Coustom Hook 이전\n\n\n  const onChangeId = e => {\n    setId(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n    console.log(\"비번입력중\");\n  };\n\n  const onChangePasswordChk = e => {\n    //비밀번호를 입력할때마다 password 를 검증하는 함수\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"NodeBird\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          required: true,\n          onChange: onChangeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordChk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"oRaacXZqFW7TPZTaEuqBeLl8grc=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/root/react/mlweb/src/modules/sign.js"],"names":["React","useState","Input","Button","Signup","props","id","setId","password","setPassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onSubmit","e","preventDefault","console","log","onChangeId","target","value","onChangePassword","onChangePasswordChk","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n// import Head from 'next/head';\n// import AppLayout from '../components/AppLayout';\nimport { Input , Button} from 'antd';\n\nconst Signup = (props) =>{\n    const [id,setId] = useState('');\n    const [password,setPassword] = useState('');\n    const [passwordCheck,setPasswordCheck] = useState('');\n    const [passwordError,setPasswordError] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        /**검증 로직 만들기\n         * 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\n         * 2. 약관 동의를 확인한다.\n         */\n        if(password !== passwordCheck){\n            return setPasswordError(true);\n        }\n        console.log({\n            id,\n            password,\n            passwordCheck\n        });\n    };\n\n    // Coustom Hook 이전\n    const onChangeId = (e) => {\n        setId(e.target.value);\n    };\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        console.log(\"비번입력중\");\n\n    };\n    const onChangePasswordChk = (e) => {\n        //비밀번호를 입력할때마다 password 를 검증하는 함수\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    };\n\n    return (\n        <>\n        <title>NodeBird</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.css\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.18.1/antd.js\"></script>\n\n        <form onSubmit={onSubmit} style={{padding:10}}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label><br/>\n                <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label><br/>\n                <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password-check\">비밀번호체크</label><br/>\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk} />\n                {passwordError && <div style={{color : 'red'}}>비밀번호가 일치하지 않습니다.</div>}\n            </div>\n            <div style={{marginTop:10}}>\n                <Button type=\"primary\" htmlType=\"submit\" >가입하기</Button>\n            </div>\n        </form>\n        </>\n    );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}